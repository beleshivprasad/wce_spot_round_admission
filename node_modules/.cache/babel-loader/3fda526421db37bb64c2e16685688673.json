{"ast":null,"code":"var _jsxFileName = \"/home/beleshivprasad/Desktop/inhouse_internship/source_code/src/Pages/Registration/CheckStatus.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport MainScreen from \"../../Components/MainScreen\";\nimport Loading from \"../../Components/Loading\";\nimport ErrorMessage from \"../../Components/ErrorMessage\";\nimport SuccessMessage from \"../../Components/SuccessMessage\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckStatus = () => {\n  _s();\n\n  const [data, setData] = useState(JSON.parse(localStorage.getItem(\"student\")));\n  const [payment, setPayment] = useState(data.paymentDone);\n  const [alloted, setAlloted] = useState(data.alloted);\n  const [fname, setFname] = useState(data.fname);\n  const [lname, setLname] = useState(data.lname);\n  const [cetID, setCetID] = useState(data.cetID);\n  const [branch, setBranch] = useState(data.branch);\n  const [percentile, setPercentile] = useState(data.percentile);\n  const [reg, setReg] = useState(localStorage.getItem(\"show\"));\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const submitHandler = async e => {\n    e.preventDefault();\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      setLoading(true);\n      const {\n        data\n      } = await axios.post(\"/student/status\", {\n        fname,\n        lname,\n        cetID\n      }, config); //saving data locally\n\n      localStorage.setItem(\"student\", JSON.stringify(data));\n      setData(data);\n      setCetID(data.cetID);\n      setFname(data.fname);\n      setLname(data.lname);\n      setPercentile(data.percentile);\n      setBranch(data.branch);\n      setPayment(data.paymentDone);\n      setAlloted(data.alloted);\n      localStorage.setItem(\"show\", true);\n      setReg(localStorage.getItem(\"show\"));\n      setTimeout(() => {\n        localStorage.setItem(\"show\", false);\n        setReg(localStorage.getItem(\"show\"));\n      }, 1000 * 60 * 10);\n\n      if (!data.paymentDone) {\n        setError(\"Please Complete the Payment\");\n        setTimeout(() => {\n          setError(false);\n        }, 3000);\n      }\n\n      setTimeout(() => {\n        setSuccess(false);\n      }, 5000);\n      setLoading(false);\n    } catch (error) {\n      setError(error.response.data.message);\n      setLoading(false);\n      setTimeout(() => {\n        setError(false);\n      }, 3000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \" Allotment Status\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckStatus, \"EZu5K+VTR7xAtzzj1pmX7fT3ND0=\", false, function () {\n  return [useHistory];\n});\n\n_c = CheckStatus;\nexport default CheckStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckStatus\");","map":{"version":3,"sources":["/home/beleshivprasad/Desktop/inhouse_internship/source_code/src/Pages/Registration/CheckStatus.js"],"names":["React","useState","Button","Col","Container","Form","Row","Link","useHistory","MainScreen","Loading","ErrorMessage","SuccessMessage","axios","CheckStatus","data","setData","JSON","parse","localStorage","getItem","payment","setPayment","paymentDone","alloted","setAlloted","fname","setFname","lname","setLname","cetID","setCetID","branch","setBranch","percentile","setPercentile","reg","setReg","history","loading","setLoading","error","setError","success","setSuccess","submitHandler","e","preventDefault","config","headers","post","setItem","stringify","setTimeout","response","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Col, Container, Form, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport MainScreen from \"../../Components/MainScreen\";\nimport Loading from \"../../Components/Loading\";\nimport ErrorMessage from \"../../Components/ErrorMessage\";\nimport SuccessMessage from \"../../Components/SuccessMessage\";\nimport axios from \"axios\";\n\nconst CheckStatus = () => {\n  const [data, setData] = useState(JSON.parse(localStorage.getItem(\"student\")));\n  const [payment, setPayment] = useState(data.paymentDone);\n  const [alloted, setAlloted] = useState(data.alloted);\n  const [fname, setFname] = useState(data.fname);\n  const [lname, setLname] = useState(data.lname);\n  const [cetID, setCetID] = useState(data.cetID);\n  const [branch, setBranch] = useState(data.branch);\n  const [percentile, setPercentile] = useState(data.percentile);\n  const [reg, setReg] = useState(localStorage.getItem(\"show\"));\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.post(\n        \"/student/status\",\n        { fname, lname, cetID },\n        config\n      );\n\n      //saving data locally\n      localStorage.setItem(\"student\", JSON.stringify(data));\n      setData(data);\n      setCetID(data.cetID);\n      setFname(data.fname);\n      setLname(data.lname);\n      setPercentile(data.percentile);\n      setBranch(data.branch);\n      setPayment(data.paymentDone);\n      setAlloted(data.alloted);\n\n      localStorage.setItem(\"show\", true);\n      setReg(localStorage.getItem(\"show\"));\n      setTimeout(() => {\n        localStorage.setItem(\"show\", false);\n        setReg(localStorage.getItem(\"show\"));\n      }, 1000 * 60 * 10);\n\n      if (!data.paymentDone) {\n        setError(\"Please Complete the Payment\");\n        setTimeout(() => {\n          setError(false);\n        }, 3000);\n      }\n      setTimeout(() => {\n        setSuccess(false);\n      }, 5000);\n      setLoading(false);\n    } catch (error) {\n      setError(error.response.data.message);\n      setLoading(false);\n      setTimeout(() => {\n        setError(false);\n      }, 3000);\n    }\n  };\n\n  return (\n    <MainScreen title={\" Allotment Status\"}>\n\n    </MainScreen>\n  );\n};\n\nexport default CheckStatus;\n"]},"metadata":{},"sourceType":"module"}