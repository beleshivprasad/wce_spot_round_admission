{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nvar _require = require('../utils/razorpay-utils'),\n    normalizeNotes = _require.normalizeNotes;\n\nmodule.exports = function (api) {\n  var BASE_URL = \"/payments/qr_codes\";\n  return {\n    create: function create() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n      /*\n       * Creates a QrCode\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var url = BASE_URL,\n          notes = params.notes,\n          rest = _objectWithoutProperties(params, ['notes']),\n          data = Object.assign(rest, normalizeNotes(notes));\n\n      return api.post({\n        url: url,\n        data: data\n      }, callback);\n    },\n    all: function all() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n      /*\n       * Fetch all fund accounts\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          url = BASE_URL;\n      return api.get({\n        url: url,\n        data: _extends({}, params, {\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        })\n      }, callback);\n    },\n    fetchAllPayments: function fetchAllPayments(qrCodeId) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var callback = arguments[2];\n      /*\n       * Fetch all payment for a qrCode\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          url = BASE_URL + '/' + qrCodeId + '/payments';\n      return api.get({\n        url: url,\n        data: _extends({}, params, {\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        })\n      }, callback);\n    },\n    fetch: function fetch(qrCodeId, callback) {\n      if (!qrCodeId) {\n        return Promise.reject(\"qrCode Id is mandatroy\");\n      }\n\n      return api.get({\n        url: BASE_URL + '/' + qrCodeId\n      }, callback);\n    },\n    close: function close(qrCodeId, callback) {\n      if (!qrCodeId) {\n        return Promise.reject(\"qrCode Id is mandatroy\");\n      }\n\n      var url = BASE_URL + '/' + qrCodeId + '/close';\n      return api.post({\n        url: url\n      }, callback);\n    }\n  };\n};","map":{"version":3,"sources":["/home/beleshivprasad/Desktop/inhouse_internship/source_code/node_modules/razorpay/dist/resources/qrCode.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_require","require","normalizeNotes","module","exports","api","BASE_URL","create","params","undefined","callback","url","notes","rest","data","post","all","from","to","count","skip","get","fetchAllPayments","qrCodeId","fetch","Promise","reject","close"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar _require = require('../utils/razorpay-utils'),\n    normalizeNotes = _require.normalizeNotes;\n\nmodule.exports = function (api) {\n\n  var BASE_URL = \"/payments/qr_codes\";\n\n  return {\n    create: function create() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n\n      /*\n       * Creates a QrCode\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var url = BASE_URL,\n          notes = params.notes,\n          rest = _objectWithoutProperties(params, ['notes']),\n          data = Object.assign(rest, normalizeNotes(notes));\n\n\n      return api.post({\n        url: url,\n        data: data\n      }, callback);\n    },\n    all: function all() {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var callback = arguments[1];\n\n\n      /*\n       * Fetch all fund accounts\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          url = BASE_URL;\n\n\n      return api.get({\n        url: url,\n        data: _extends({}, params, {\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        })\n      }, callback);\n    },\n    fetchAllPayments: function fetchAllPayments(qrCodeId) {\n      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var callback = arguments[2];\n\n\n      /*\n       * Fetch all payment for a qrCode\n       *\n       * @param {Object} params\n       * @param {Function} callback\n       *\n       * @return {Promise}\n       */\n\n      var from = params.from,\n          to = params.to,\n          count = params.count,\n          skip = params.skip,\n          url = BASE_URL + '/' + qrCodeId + '/payments';\n\n\n      return api.get({\n        url: url,\n        data: _extends({}, params, {\n          from: from,\n          to: to,\n          count: count,\n          skip: skip\n        })\n      }, callback);\n    },\n    fetch: function fetch(qrCodeId, callback) {\n\n      if (!qrCodeId) {\n\n        return Promise.reject(\"qrCode Id is mandatroy\");\n      }\n\n      return api.get({\n        url: BASE_URL + '/' + qrCodeId\n      }, callback);\n    },\n    close: function close(qrCodeId, callback) {\n\n      if (!qrCodeId) {\n\n        return Promise.reject(\"qrCode Id is mandatroy\");\n      }\n\n      var url = BASE_URL + '/' + qrCodeId + '/close';\n\n      return api.post({\n        url: url\n      }, callback);\n    }\n  };\n};"]},"metadata":{},"sourceType":"script"}