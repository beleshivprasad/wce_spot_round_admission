{"ast":null,"code":"var _jsxFileName = \"/home/beleshivprasad/Desktop/inhouse_internship/source_code/frontend/src/Pages/Payments/PaymentPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\"; // import { useHistory } from \"react-router-dom\";\n\nimport MainScreen from \"../../Components/MainScreen\";\nimport Loading from \"../../Components/Loading\";\nimport ErrorMessage from \"../../Components/ErrorMessage\";\nimport SuccessMessage from \"../../Components/SuccessMessage\"; // import axios from \"axios\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentPage = () => {\n  _s();\n\n  //   const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const loadScript = src => {\n    return new Promise(resolve => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n      document.body.appendChild(script);\n\n      script.onload = () => {\n        resolve(true);\n      };\n\n      script.onerror = () => {\n        resolve(false);\n      };\n    });\n  };\n\n  const displayRazorpay = async e => {\n    e.preventDefault();\n    const res = await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\n\n    if (!res) {\n      setError(\"Failed Loading Razorpay\");\n    } else {\n      const options = {\n        key: process.env.RAZORPAY_KEY,\n        // Enter the Key ID generated from the Dashboard\n        amount: \"50000\",\n        // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n        currency: \"INR\",\n        name: \"Walchand Collge of Engineering, Sangli\",\n        description: \"Spot Round Fee Payment\",\n        image: \"https://img.collegepravesh.com/2018/11/WCE-Sangli-Logo.png\",\n        order_id: \"order_DBJOWzybf0sJbb\",\n        //This is a sample Order ID. Pass the `id` obtained in the previous step\n        handler: function (response) {\n          alert(response.razorpay_payment_id);\n        },\n        prefill: {\n          name: \"Gaurav Kumar\",\n          email: \"gaurav.kumar@example.com\",\n          contact: \"9999999999\"\n        }\n      };\n      var rzp1 = new window.Razorpay(options);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"Spot Round Fee Payment\",\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n      variant: \"success\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: e => {\n            displayRazorpay(e);\n          },\n          children: \"Proceed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentPage, \"J2IwhNMWWrlNhtmrdw+pFEb6uwk=\");\n\n_c = PaymentPage;\nexport default PaymentPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"sources":["/home/beleshivprasad/Desktop/inhouse_internship/source_code/frontend/src/Pages/Payments/PaymentPage.js"],"names":["React","useState","Button","Container","Row","MainScreen","Loading","ErrorMessage","SuccessMessage","PaymentPage","loading","setLoading","error","setError","success","setSuccess","loadScript","src","Promise","resolve","script","document","createElement","body","appendChild","onload","onerror","displayRazorpay","e","preventDefault","res","options","key","process","env","RAZORPAY_KEY","amount","currency","name","description","image","order_id","handler","response","alert","razorpay_payment_id","prefill","email","contact","rzp1","window","Razorpay"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Container, Row } from \"react-bootstrap\";\n// import { useHistory } from \"react-router-dom\";\nimport MainScreen from \"../../Components/MainScreen\";\nimport Loading from \"../../Components/Loading\";\nimport ErrorMessage from \"../../Components/ErrorMessage\";\nimport SuccessMessage from \"../../Components/SuccessMessage\";\n// import axios from \"axios\";\n\nconst PaymentPage = () => {\n  //   const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n\n  const loadScript = (src) => {\n    return new Promise((resolve) => {\n      const script = document.createElement(\"script\");\n      script.src = src;\n      document.body.appendChild(script);\n      script.onload = () => {\n        resolve(true);\n      };\n      script.onerror = () => {\n        resolve(false);\n      };\n    });\n  };\n\n  const displayRazorpay = async (e) => {\n    e.preventDefault();\n    const res = await loadScript(\n      \"https://checkout.razorpay.com/v1/checkout.js\"\n    );\n    if (!res) {\n      setError(\"Failed Loading Razorpay\");\n    } else {\n      const options = {\n        key: process.env.RAZORPAY_KEY, // Enter the Key ID generated from the Dashboard\n        amount: \"50000\", // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n        currency: \"INR\",\n        name: \"Walchand Collge of Engineering, Sangli\",\n        description: \"Spot Round Fee Payment\",\n        image: \"https://img.collegepravesh.com/2018/11/WCE-Sangli-Logo.png\",\n        order_id: \"order_DBJOWzybf0sJbb\", //This is a sample Order ID. Pass the `id` obtained in the previous step\n        handler: function (response) {\n          alert(response.razorpay_payment_id);\n        },\n        prefill: {\n          name: \"Gaurav Kumar\",\n          email: \"gaurav.kumar@example.com\",\n          contact: \"9999999999\",\n        },\n      };\n      var rzp1 = new window.Razorpay(options);\n    }\n  };\n  return (\n    <MainScreen title={\"Spot Round Fee Payment\"}>\n      {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n      {success && <SuccessMessage variant=\"success\">{success}</SuccessMessage>}\n      {loading && <Loading></Loading>}\n      <Container>\n        <Row>\n          <Button\n            type=\"button\"\n            onClick={(e) => {\n              displayRazorpay(e);\n            }}\n          >\n            Proceed\n          </Button>\n        </Row>\n      </Container>\n    </MainScreen>\n  );\n};\n\nexport default PaymentPage;\n"]},"metadata":{},"sourceType":"module"}