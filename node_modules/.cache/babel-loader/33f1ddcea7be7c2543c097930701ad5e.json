{"ast":null,"code":"var _jsxFileName = \"/home/beleshivprasad/Desktop/inhouse_internship/source_code/frontend/src/Pages/MeritList/MeritList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport Loading from \"../../Components/Loading\";\nimport axios from \"axios\";\nimport MainScreen from \"../../Components/MainScreen\";\nimport ErrorMessage from \"../../Components/ErrorMessage\";\nimport SuccessMessage from \"../../Components/SuccessMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MeritList = () => {\n  _s();\n\n  const [showMerit, setShowMerit] = useState(localStorage.getItem(\"showMerit\"));\n  const [studentData, setStudentData] = useState([]);\n  const [branch, setBranch] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const getMerit = async e => {\n    e.preventDefault();\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      setLoading(true);\n      const {\n        data\n      } = await axios.post(\"/student/getmerit\", {\n        branch\n      }, config);\n      setStudentData(data);\n\n      if (data) {\n        setSuccess(\"Fetched Data Succesfully\");\n        setTimeout(() => {\n          setSuccess(false);\n        }, 2000);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      setError(error.response.data.message);\n      setLoading(false);\n      setTimeout(() => {\n        setError(false);\n      }, 3000);\n    }\n  };\n\n  const renderStudent = (item, index) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.cetID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.fname.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.lname.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.percentile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.quota.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.caste.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: item.branch.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"Merit List\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"center\",\n      children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n        variant: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), showMerit !== \"true\" ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Merit List Yet to be Declared by College Authorites\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: getMerit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Choose Branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              \"aria-label\": \"Default select example\",\n              onChange: e => {\n                setBranch(e.target.value);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Branch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"cse\",\n                children: \"Computer Science and Engineering\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"it\",\n                children: \"Information Technology\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"civil\",\n                children: \"Civil Engineering\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"electronics\",\n                children: \"Electronics Engineering\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"electrical\",\n                children: \"Electrical Engineering\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"mechanical\",\n                children: \"Mechanical Engieering\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"dark\",\n            type: \"submit\",\n            onClick: () => {\n              setShowMerit(localStorage.getItem(\"showMerit\"));\n            },\n            children: \"Get Merit List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"status\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"CET Application ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Percentile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Quota\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Requestd Branch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: studentData === null || studentData === void 0 ? void 0 : studentData.map(renderStudent)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MeritList, \"94mw/3TZWY4v/ErkQA6fUiJr2V4=\");\n\n_c = MeritList;\nexport default MeritList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeritList\");","map":{"version":3,"sources":["/home/beleshivprasad/Desktop/inhouse_internship/source_code/frontend/src/Pages/MeritList/MeritList.js"],"names":["React","useState","Button","Container","Form","Loading","axios","MainScreen","ErrorMessage","SuccessMessage","MeritList","showMerit","setShowMerit","localStorage","getItem","studentData","setStudentData","branch","setBranch","error","setError","success","setSuccess","loading","setLoading","getMerit","e","preventDefault","config","headers","data","post","setTimeout","response","message","renderStudent","item","index","cetID","fname","toUpperCase","lname","percentile","quota","caste","target","value","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport Loading from \"../../Components/Loading\";\nimport axios from \"axios\";\nimport MainScreen from \"../../Components/MainScreen\";\nimport ErrorMessage from \"../../Components/ErrorMessage\";\nimport SuccessMessage from \"../../Components/SuccessMessage\";\nconst MeritList = () => {\n  const [showMerit, setShowMerit] = useState(localStorage.getItem(\"showMerit\"));\n  const [studentData, setStudentData] = useState([]);\n  const [branch, setBranch] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const getMerit = async (e) => {\n    e.preventDefault();\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      setLoading(true);\n      const { data } = await axios.post(\n        \"/student/getmerit\",\n        { branch },\n        config\n      );\n      setStudentData(data);\n      if (data) {\n        setSuccess(\"Fetched Data Succesfully\");\n        setTimeout(() => {\n          setSuccess(false);\n        }, 2000);\n      }\n      setLoading(false);\n    } catch (error) {\n      setError(error.response.data.message);\n      setLoading(false);\n      setTimeout(() => {\n        setError(false);\n      }, 3000);\n    }\n  };\n  const renderStudent = (item, index) => {\n    return (\n      <tr key={index}>\n        <td>{item.cetID}</td>\n        <td>{item.fname.toUpperCase()}</td>\n        <td>{item.lname.toUpperCase()}</td>\n        <td>{item.percentile}</td>\n        <td>{item.quota.toUpperCase()}</td>\n        <td>{item.caste.toUpperCase()}</td>\n        <td>{item.branch.toUpperCase()}</td>\n      </tr>\n    );\n  };\n\n  return (\n    <MainScreen title={\"Merit List\"}>\n      <Container className=\"center\">\n        {error && <ErrorMessage variant=\"danger\">{error}</ErrorMessage>}\n        {success && (\n          <SuccessMessage variant=\"success\">{success}</SuccessMessage>\n        )}\n        {loading && <Loading></Loading>}\n\n        <br />\n        <br />\n        {showMerit !== \"true\" ? (\n          <h1>Merit List Yet to be Declared by College Authorites</h1>\n        ) : (\n          <>\n            <br />\n            <Form onSubmit={getMerit}>\n              <Form.Group>\n                <Form.Label>Choose Branch</Form.Label>\n                <Form.Select\n                  aria-label=\"Default select example\"\n                  onChange={(e) => {\n                    setBranch(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Select Branch</option>\n                  <option value=\"cse\">Computer Science and Engineering</option>\n                  <option value=\"it\">Information Technology</option>\n                  <option value=\"civil\">Civil Engineering</option>\n                  <option value=\"electronics\">Electronics Engineering</option>\n                  <option value=\"electrical\">Electrical Engineering</option>\n                  <option value=\"mechanical\">Mechanical Engieering</option>\n                </Form.Select>\n              </Form.Group>\n              <br />\n              <Button\n                variant=\"dark\"\n                type=\"submit\"\n                onClick={() => {\n                  setShowMerit(localStorage.getItem(\"showMerit\"));\n                }}\n              >\n                Get Merit List\n              </Button>\n            </Form>\n            <br></br>\n            <table className=\"status\">\n              <thead>\n                <tr>\n                  <th>CET Application ID</th>\n                  <th>First Name</th>\n                  <th>Last Name</th>\n                  <th>Percentile</th>\n                  <th>Quota</th>\n                  <th>Category</th>\n                  <th>Requestd Branch</th>\n                </tr>\n              </thead>\n              <tbody>{studentData?.map(renderStudent)}</tbody>\n            </table>\n          </>\n        )}\n      </Container>\n    </MainScreen>\n  );\n};\n\nexport default MeritList;\n"]},"metadata":{},"sourceType":"module"}